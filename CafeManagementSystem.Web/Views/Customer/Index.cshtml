@model List<CafeManagementSystem.Business.Operations.Cafe.Dtos.CafeDto>



    <div class="bg-animation"></div>

    <div class="main-content">
        <div class="container">
            <!-- Page Header -->
            <div class="page-header">
                <div class="header-content">
                    <h1 class="page-title">
                        <i class="fas fa-coffee"></i>
                        Kafelerimiz
                    </h1>
                    <p class="page-subtitle">
                        Türkiyenin en iyi kafelerini keşfedin ve deneyimleyin
                    </p>
                </div>
                <div class="header-actions">
                    
                </div>
            </div>

            <!-- Filters Section -->
            <div class="filters-section">
                <div class="filter-group">
                    <div class="filter-item">
                        <label>Konum</label>
                        <select class="filter-select" id="locationFilter">
                            <option value="">Tüm Konumlar</option>
                            <option value="istanbul">İstanbul</option>
                            <option value="ankara">Ankara</option>
                            <option value="izmir">İzmir</option>
                        </select>
                    </div>
                    <div class="filter-item">
                        <label>Yıldız</label>
                        <select class="filter-select" id="starFilter">
                            <option value="">Tüm Yıldızlar</option>
                            <option value="5">5 Yıldız</option>
                            <option value="4">4+ Yıldız</option>
                            <option value="3">3+ Yıldız</option>
                        </select>
                    </div>
                    <div class="filter-item">
                        <label>Arama</label>
                        <input type="text" class="filter-input" id="searchFilter" placeholder="Kafe adı ara...">
                    </div>
                </div>
            </div>

            <!-- Cafes Grid -->
            <div class="cafes-grid" id="cafesGrid">
                @if (Model != null && Model.Any())
                {
                    @foreach (var cafe in Model)
                    {
                        <div class="cafe-card" data-location="@cafe.Location?.ToLower()" data-stars="@(cafe.Stars ?? 0)" data-name="@cafe.Name?.ToLower()">
                            <div class="cafe-image">
                                <img src="https://images.unsplash.com/photo-1554118811-1e0d58224f24?w=400&h=250&fit=crop&crop=center" alt="@cafe.Name" />
                                <div class="cafe-rating">
                                    @if (cafe.Stars.HasValue)
                                    {
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= cafe.Stars.Value ? "active" : "")"></i>
                                        }
                                        <span class="rating-number">@cafe.Stars.Value</span>
                                    }
                                    else
                                    {
                                        <span class="no-rating">Değerlendirme yok</span>
                                    }
                                </div>
                            </div>

                            <div class="cafe-content">
                                <div class="cafe-header">
                                    <h3 class="cafe-name">@cafe.Name</h3>
                                    <div class="cafe-id">#@cafe.Id</div>
                                </div>

                                <div class="cafe-location">
                                    <i class="fas fa-map-marker-alt"></i>
                                    <span>@(cafe.Location ?? "Konum belirtilmemiş")</span>
                                </div>

                                <div class="cafe-features">
                                    @if (cafe.Features != null && cafe.Features.Any())
                                    {
                                        @foreach (var feature in cafe.Features.Take(3))
                                        {
                                            <span class="feature-tag">
                                                <i class="fas fa-check"></i>
                                                @feature.Title
                                            </span>
                                        }
                                        @if (cafe.Features.Count() > 3)
                                        {
                                            <span class="feature-tag more-features">
                                                +@(cafe.Features.Count() - 3) daha
                                            </span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="no-features">Özellik bilgisi yok</span>
                                    }
                                </div>

                                <div class="cafe-actions">
                                    <button class="btn btn-outline" onclick="viewCafeDetail(@cafe.Id)">
                                        <i class="fas fa-eye"></i>
                                        Detay
                                    </button>
                                   
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state">
                        <div class="empty-icon">
                            <i class="fas fa-coffee"></i>
                        </div>
                        <h3>Henüz kafe bulunmuyor</h3>
                        <p>İlk kafenizi ekleyerek başlayın</p>
                        <button class="btn btn-primary" onclick="openAddCafeModal()">
                            <i class="fas fa-plus"></i>
                            İlk Kafenizi Ekleyin
                        </button>
                    </div>
                }


            </div>
        </div>
    </div>

    <style>
        /* Page Header */
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding: 2rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .header-content {
            flex: 1;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .page-subtitle {
            color: var(--text-muted);
            font-size: 1.1rem;
            margin: 0;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
        }

        /* Buttons */
        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 12px;
            font-weight: 500;
            text-decoration: none;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
        }

        .btn-primary {
            background: var(--gradient-primary);
            color: white;
            box-shadow: var(--shadow-light);
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: var(--shadow-medium);
            }

        .btn-outline {
            background: transparent;
            color: var(--text-secondary);
            border: 2px solid var(--border-color);
        }

            .btn-outline:hover {
                background: var(--gradient-primary);
                color: white;
                border-color: transparent;
                transform: translateY(-2px);
            }

        /* Filters Section */
        .filters-section {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            border: 1px solid var(--border-color);
        }

        .filter-group {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }

        .filter-item label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--text-secondary);
        }

        .filter-select, .filter-input {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            background: white;
        }

            .filter-select:focus, .filter-input:focus {
                outline: none;
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(139, 69, 19, 0.1);
            }

        /* Cafes Grid */
        .cafes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .cafe-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            overflow: hidden;
            box-shadow: var(--shadow-light);
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
            position: relative;
        }

            .cafe-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--shadow-heavy);
            }

        .cafe-image {
            position: relative;
            height: 200px;
            overflow: hidden;
        }

            .cafe-image img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.3s ease;
            }

        .cafe-card:hover .cafe-image img {
            transform: scale(1.05);
        }

        .cafe-rating {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(10px);
            padding: 0.5rem 0.75rem;
            border-radius: 8px;
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

            .cafe-rating .fa-star {
                color: #ffd700;
                font-size: 0.8rem;
            }

                .cafe-rating .fa-star:not(.active) {
                    color: rgba(255, 255, 255, 0.3);
                }

        .rating-number {
            color: white;
            font-size: 0.9rem;
            font-weight: 600;
            margin-left: 0.25rem;
        }

        .no-rating {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.8rem;
        }

        .cafe-content {
            padding: 1.5rem;
        }

        .cafe-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 1rem;
        }

        .cafe-name {
            font-size: 1.3rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0;
            flex: 1;
        }

        .cafe-id {
            background: var(--gradient-secondary);
            color: var(--text-primary);
            padding: 0.25rem 0.5rem;
            border-radius: 6px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .cafe-location {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--text-muted);
            margin-bottom: 1rem;
            font-size: 0.9rem;
        }

            .cafe-location i {
                color: var(--primary-color);
            }

        .cafe-features {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .feature-tag {
            background: rgba(139, 69, 19, 0.1);
            color: var(--text-secondary);
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

            .feature-tag i {
                font-size: 0.7rem;
                color: var(--primary-color);
            }

        .more-features {
            background: var(--gradient-primary);
            color: white;
        }

        .no-features {
            color: var(--text-muted);
            font-style: italic;
            font-size: 0.9rem;
        }

        .cafe-actions {
            display: flex;
            gap: 0.75rem;
        }

            .cafe-actions .btn {
                flex: 1;
                justify-content: center;
                padding: 0.6rem 1rem;
                font-size: 0.85rem;
            }

        /* Empty State */
        .empty-state {
            grid-column: 1 / -1;
            text-align: center;
            padding: 4rem 2rem;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            border: 2px dashed var(--border-color);
        }

        .empty-icon {
            width: 100px;
            height: 100px;
            margin: 0 auto 1.5rem;
            background: var(--gradient-secondary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2.5rem;
            color: var(--text-primary);
        }

        .empty-state h3 {
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .empty-state p {
            color: var(--text-muted);
            margin-bottom: 2rem;
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .page-header {
                flex-direction: column;
                align-items: stretch;
                gap: 1rem;
            }

            .header-actions {
                justify-content: center;
            }

            .page-title {
                font-size: 2rem;
                text-align: center;
            }

            .cafes-grid {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }

            .filter-group {
                grid-template-columns: 1fr;
            }

            .cafe-actions {
                flex-direction: column;
            }
        }

        /* Animation */
        .cafe-card {
            opacity: 0;
            transform: translateY(30px);
            animation: fadeInUp 0.6s ease forwards;
        }

            .cafe-card:nth-child(1) {
                animation-delay: 0.1s;
            }

            .cafe-card:nth-child(2) {
                animation-delay: 0.2s;
            }

            .cafe-card:nth-child(3) {
                animation-delay: 0.3s;
            }

            .cafe-card:nth-child(4) {
                animation-delay: 0.4s;
            }

            .cafe-card:nth-child(5) {
                animation-delay: 0.5s;
            }

            .cafe-card:nth-child(6) {
                animation-delay: 0.6s;
            }
    </style>

    <script>// Filter functionality
        function filterCafes() {
            const locationFilter = document.getElementById('locationFilter').value.toLowerCase();
            const starFilter = document.getElementById('starFilter').value;
            const searchFilter = document.getElementById('searchFilter').value.toLowerCase();
            const cafeCards = document.querySelectorAll('.cafe-card');

            cafeCards.forEach(card => {
                const location = card.dataset.location || '';
                const stars = parseInt(card.dataset.stars) || 0;
                const name = card.dataset.name || '';

                const locationMatch = !locationFilter || location.includes(locationFilter);
                const starMatch = !starFilter || stars >= parseInt(starFilter);
                const nameMatch = !searchFilter || name.includes(searchFilter);

                if (locationMatch && starMatch && nameMatch) {
                    card.style.display = 'block';
                    card.style.animation = 'fadeInUp 0.6s ease forwards';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        // Event listeners for filters
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('locationFilter').addEventListener('change', filterCafes);
            document.getElementById('starFilter').addEventListener('change', filterCafes);
            document.getElementById('searchFilter').addEventListener('input', filterCafes);
        });

        // Action functions
        function viewCafeDetail(cafeId) {
            // ASP.NET Core action'a yönlendirme
            window.location.href = `/Customer/Detail/${cafeId}`;
        }

       </script>


