@model CafeManagementSystem.Business.Operations.Cafe.Dtos.CafeDto
@using CafeManagementSystem.Business.Operations.Product.Dtos
@using CafeManagementSystem.Business.Operations.Review.Dtos

@{
    var products = ViewBag.Products as List<ProductDto>;
    var reviews = ViewBag.Reviews as List<ReviewDto>;
}

<style>
    :root {
        --primary-color: #8B4513;
        --primary-dark: #6B3410;
        --secondary-color: #D2691E;
        --accent-color: #F4A460;
        --bg-primary: #FDFAF7;
        --bg-secondary: #F8F4F0;
        --text-primary: #2C1810;
        --text-secondary: #6B4423;
        --text-muted: #8B7355;
        --border-color: #E8D5C4;
        --shadow-light: 0 2px 8px rgba(139, 69, 19, 0.08);
        --shadow-medium: 0 4px 16px rgba(139, 69, 19, 0.12);
        --shadow-heavy: 0 8px 32px rgba(139, 69, 19, 0.16);
        --gradient-primary: linear-gradient(135deg, #8B4513 0%, #D2691E 100%);
        --gradient-secondary: linear-gradient(135deg, #F4A460 0%, #DEB887 100%);
        --success-color: #27AE60;
        --warning-color: #F39C12;
        --danger-color: #E74C3C;
    }

    .detail-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
        min-height: 100vh;
        background: var(--bg-primary);
    }

    .cafe-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 24px;
        padding: 2.5rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-medium);
        border: 1px solid var(--border-color);
        position: relative;
        overflow: hidden;
    }

        .cafe-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 6px;
            background: var(--gradient-primary);
            border-radius: 24px 24px 0 0;
        }

        .cafe-header::after {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(244, 164, 96, 0.1) 0%, transparent 70%);
            pointer-events: none;
        }

    .cafe-title {
        font-size: 2.5rem;
        font-weight: 700;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 1rem;
        position: relative;
        z-index: 1;
    }

    .cafe-location {
        font-size: 1.2rem;
        color: var(--text-secondary);
        display: flex;
        align-items: center;
        gap: 0.5rem;
        position: relative;
        z-index: 1;
    }

        .cafe-location i {
            color: var(--secondary-color);
            font-size: 1.1rem;
        }

    .content-grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 2rem;
        align-items: start;
    }

    .products-section {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(15px);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: var(--shadow-light);
        border: 1px solid var(--border-color);
    }

    .section-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .section-title i {
            color: var(--secondary-color);
            font-size: 1.5rem;
        }

    .products-grid {
        display: grid;
        gap: 1.5rem;
    }

    .product-card {
        background: rgba(255, 255, 255, 0.8);
        border-radius: 16px;
        padding: 1.5rem;
        border: 2px solid transparent;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .product-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, transparent, rgba(244, 164, 96, 0.1), transparent);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover {
            border-color: var(--accent-color);
            transform: translateY(-4px);
            box-shadow: var(--shadow-medium);
        }

            .product-card:hover::before {
                opacity: 1;
            }

    .product-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        position: relative;
        z-index: 1;
    }

    .product-name {
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--text-primary);
    }

    .product-price {
        font-size: 1.3rem;
        font-weight: 700;
        color: var(--secondary-color);
        background: var(--gradient-secondary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .order-btn {
        background: var(--gradient-primary);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        .order-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
            color: white;
        }

        .order-btn i {
            font-size: 0.9rem;
        }

    .reviews-section {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(15px);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: var(--shadow-light);
        border: 1px solid var(--border-color);
        height: fit-content;
        position: sticky;
        top: 2rem;
    }

    .reviews-container {
        max-height: 600px;
        overflow-y: auto;
        padding-right: 0.5rem;
    }

        .reviews-container::-webkit-scrollbar {
            width: 6px;
        }

        .reviews-container::-webkit-scrollbar-track {
            background: var(--bg-secondary);
            border-radius: 10px;
        }

        .reviews-container::-webkit-scrollbar-thumb {
            background: var(--accent-color);
            border-radius: 10px;
        }

            .reviews-container::-webkit-scrollbar-thumb:hover {
                background: var(--secondary-color);
            }

    .review-card {
        background: rgba(248, 244, 240, 0.6);
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        border-left: 4px solid var(--accent-color);
        transition: all 0.3s ease;
    }

        .review-card:hover {
            background: rgba(248, 244, 240, 0.8);
            transform: translateX(4px);
            box-shadow: var(--shadow-light);
        }

    .review-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.75rem;
    }

    .review-user {
        font-weight: 600;
        color: var(--text-primary);
    }

    .review-date {
        font-size: 0.9rem;
        color: var(--text-muted);
    }

    .review-rating {
        margin-bottom: 0.75rem;
    }

    .star {
        color: var(--warning-color);
        font-size: 1.1rem;
        margin-right: 0.1rem;
    }

        .star.empty {
            color: var(--border-color);
        }

    .review-comment {
        color: var(--text-secondary);
        line-height: 1.6;
        font-style: italic;
    }

    .no-reviews {
        text-align: center;
        color: var(--text-muted);
        padding: 2rem;
        font-style: italic;
    }

        .no-reviews i {
            font-size: 3rem;
            color: var(--border-color);
            margin-bottom: 1rem;
            display: block;
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .detail-container {
            padding: 1rem;
        }

        .cafe-header {
            padding: 1.5rem;
        }

        .cafe-title {
            font-size: 2rem;
        }

        .content-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        .reviews-section {
            position: static;
        }

        .section-title {
            font-size: 1.5rem;
        }

        .product-card {
            padding: 1rem;
        }

        .product-info {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
    }

    /* Animation */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in-up {
        animation: fadeInUp 0.6s ease forwards;
    }

    /* Loading animation for order buttons */
    .order-btn.loading {
        pointer-events: none;
        opacity: 0.7;
    }

        .order-btn.loading::after {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-left: 0.5rem;
        }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }
</style>

<div class="detail-container">
    <!-- Cafe Header -->
    <div class="cafe-header fade-in-up">
        <h1 class="cafe-title">@Model.Name</h1>
        <div class="cafe-location">
            <i class="fas fa-map-marker-alt"></i>
            <span>@Model.Location</span>
        </div>
    </div>

    <!-- Content Grid -->
    <div class="content-grid">
        <!-- Products Section -->
        <div class="products-section fade-in-up">
            <h2 class="section-title">
                <i class="fas fa-utensils"></i>
                Menü
            </h2>
            <div class="products-grid">
                @foreach (var product in products)
                {
                    <div class="product-card">
                        <div class="product-info">
                            <span class="product-name">@product.ProductName</span>
                            <span class="product-price">@product.Price ₺</span>
                        </div>
                        <button class="order-btn" onclick="orderProduct(@product.Id, event)">
                            <i class="fas fa-plus"></i>
                            Sipariş Ver
                        </button>
                    </div>
                }
            </div>
        </div>

        <!-- Reviews Section -->
        <div class="reviews-section fade-in-up">
            <h2 class="section-title">
                <i class="fas fa-star"></i>
                Yorumlar
            </h2>
            <div class="reviews-container">
                @if (reviews != null && reviews.Any())
                {
                    @foreach (var review in reviews)
                    {
                        <div class="review-card">
                            <div class="review-header">
                                <span class="review-user">@review.UserFullName</span>
                                <span class="review-date">@review.CreatedDate.ToString("dd.MM.yyyy HH:mm")</span>
                            </div>
                            <div class="review-rating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="star @(i <= review.Rating ? "" : "empty")">★</span>
                                }
                            </div>
                            <div class="review-comment">
                                "@review.Comment"
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="no-reviews">
                        <i class="fas fa-comment-slash"></i>
                        Bu kafeye henüz yorum yapılmamış.
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Add Review Section (Only for logged-in users) -->
    @{
        var isCustomer = ViewBag.UserIsCustomer != null && (bool)ViewBag.UserIsCustomer;
        var userId = ViewBag.UserId;
    }
    @if (isCustomer)
    {
        <div id="add-review-section" class="fade-in-up" style="margin-top:2.5rem;">
            <h2 class="section-title">
                <i class="fas fa-pen"></i>
                Yorum Yap
            </h2>
            <form id="reviewForm" style="background:rgba(255,255,255,0.95);border-radius:16px;padding:1.5rem;box-shadow:var(--shadow-light);border:1px solid var(--border-color);">
                <input type="hidden" name="CafeId" value="@Model.Id" />
                <input type="hidden" name="UserId" value="@userId" />
                <div style="margin-bottom:1rem;">
                    <label for="rating" style="font-weight:600;">Puan:</label>
                    <select id="rating" name="Rating" required style="margin-left:1rem;padding:0.3rem 0.7rem;border-radius:8px;">
                        <option value="">Seçiniz</option>
                        @for (int i = 5; i >= 1; i--)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div style="margin-bottom:1rem;">
                    <label for="comment" style="font-weight:600;">Yorumunuz:</label>
                    <textarea id="comment" name="Comment" rows="3" maxlength="500" required style="width:100%;border-radius:8px;padding:0.7rem;margin-top:0.5rem;"></textarea>
                </div>
                <button type="submit" class="order-btn" style="margin-top:0.5rem;">
                    <i class="fas fa-paper-plane"></i> Gönder
                </button>
            </form>
            <div id="reviewFormMsg" style="margin-top:1rem;"></div>
        </div>
    }
</div>

<script>// Order product function
    async function orderProduct(productId, event) {
        const button = event.target.closest('.order-btn');
        button.classList.add('loading');
        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sipariş Veriliyor...';

        // Kullanıcı ID'sini ViewBag'den veya bir hidden input'tan alabilirsin
        const userId = document.querySelector('input[name="UserId"]')?.value;

        // Sipariş için gerekli veriler
        const data = {
            ProductId: productId,
            UserId: parseInt(userId),
            GuestCount: 1, // veya kullanıcıdan alınabilir
            CreatedDate: new Date().toISOString(),
            SpecialRequest: ""
        };

        try {
            const res = await fetch('https://localhost:7265/api/Orders', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data),
                credentials: 'same-origin'
            });
            if (res.ok) {
                showNotification('Sipariş başarıyla verildi!', 'success');
            } else {
                showNotification('Sipariş verilemedi!', 'danger');
            }
        } catch {
            showNotification('Sunucuya bağlanılamadı.', 'danger');
        }

        button.classList.remove('loading');
        button.innerHTML = '<i class="fas fa-plus"></i> Sipariş Ver';
    }

    // Simple notification function
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 1.5rem;
        border-radius: 12px;
        color: white;
        font-weight: 500;
        z-index: 10000;
        animation: slideIn 0.3s ease;
        background: ${type === 'success' ? 'var(--success-color)' : 'var(--primary-color)'};
    `;
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.animation = 'slideOut 0.3s ease';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    // Initialize animations
    document.addEventListener('DOMContentLoaded', function () {
        // Staggered animation for product cards
        const productCards = document.querySelectorAll('.product-card');
        productCards.forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            setTimeout(() => {
                card.style.transition = 'all 0.6s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 100);
        });

        // Staggered animation for review cards
        const reviewCards = document.querySelectorAll('.review-card');
        reviewCards.forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateX(-20px)';
            setTimeout(() => {
                card.style.transition = 'all 0.6s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateX(0)';
            }, (index * 100) + 200);
        });
    });

    // Add CSS for animations
    const style = document.createElement('style');
    style.textContent = `
    @@keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    @@keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
`;
    document.head.appendChild(style);

    // Review form submission
    document.addEventListener('DOMContentLoaded', function () {
        console.log("Review form script loaded!");

        const reviewForm = document.getElementById('reviewForm');
        if (reviewForm) {
            reviewForm.addEventListener('submit', async function (e) {
                e.preventDefault();
                const form = e.target;
                const data = {
                    cafeId: parseInt(form.CafeId.value),
                    userId: parseInt(form.UserId.value),
                    rating: parseInt(form.Rating.value),
                    comment: form.Comment.value
                };
                const btn = form.querySelector('button[type="submit"]');
                btn.classList.add('loading');
                btn.disabled = true;
                document.getElementById('reviewFormMsg').textContent = '';

                try {
                    const res = await fetch('https://localhost:7265/api/Reviews', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data),
                        credentials: 'same-origin'
                    });
                    const result = await res.json();
                    if (res.ok) {
                        showNotification('Yorumunuz eklendi!', 'success');
                        form.reset();
                        setTimeout(() => window.location.reload(), 1200);
                    } else {
                        document.getElementById('reviewFormMsg').textContent = result || 'Bir hata oluştu.';
                    }
                } catch {
                    document.getElementById('reviewFormMsg').textContent = 'Sunucuya bağlanılamadı.';
                }
                btn.classList.remove('loading');
                btn.disabled = false;
            });
        }
    });</script>